 <Box sx={{ flexGrow: 0 }}>
        {user ? (
          <Tooltip title="Open settings">
            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>
              {user?.avatar ? (
                <Avatar src={resolvePath(user?.avatar)} />
              ) : (
                <Avatar
                  sx={{
                    bgcolor: green[500],
                  }}
                >
                  {user.firstName[0].toUpperCase()}
                </Avatar>
              )}
            </IconButton>
          </Tooltip>
        ) : (
          <FlexBox
            sx={{
              columnGap: "10px",
              fontWeight: "bold",
            }}
          >
            <Link to="/signin">
              <Box cursor="pointer" fontSize="12px" padding="5px 10px">
                SIGN IN
              </Box>
            </Link>
            <Link to="/signup">
              <Box
                fontSize="12px"
                padding="5px 10px"
                borderRadius="25px"
                color="#fff"
                backgroundColor={shades.secondary[900]}
              >
                SIGN UP
              </Box>
            </Link>
          </FlexBox>
        )}
        <Menu
          sx={{
            mt: "40px",
            "& ul": {
              padding: 0,
            },
            "> div": {
              borderRadius: "10px",
            },
          }}
          id="menu-appbar"
          anchorEl={anchorElUser}
          anchorOrigin={{
            vertical: "top",
            horizontal: "right",
          }}
          keepMounted
          transformOrigin={{
            vertical: "top",
            horizontal: "right",
          }}
          open={Boolean(anchorElUser)}
          onClose={handleCloseUserMenu}
        >
          {/* Email menu item */}
          <MenuItem
            sx={{
              borderBottom: `1px solid ${shades.secondary[300]}`,
              width: "220px",
              padding: "8px 10px",
            }}
            onClick={handleCloseUserMenu}
          >
            <Link to="/account">
              <Typography
                fontWeight="bold"
                fontSize="13px"
              >{`${user?.firstName} ${user?.lastName}`}</Typography>
              <Typography color={shades.primary[300]} variant="small">
                {user?.email}
              </Typography>
            </Link>
          </MenuItem>

          {/* links */}
          <Box sx={{ borderBottom: `1px solid ${shades.secondary[300]}` }}>
            {[
              {
                label: "Read the announcement",
                url: "https://openai.com/dall-e-2/",
              },
              {
                label: "Join the DALL.E Discord",
                url: "https://discord.com/invite/openai",
              },
              { label: "Visit the OpenAI API", url: "https://openai.com/api/" },
            ].map((node, idx) => (
              <MenuItem key={idx} sx={{ p: "8px 10px" }}>
                <a
                  style={{ fontSize: "13px" }}
                  href={node.url}
                  target="__blank"
                >
                  {node.label}
                </a>
              </MenuItem>
            ))}
            {status === STATUS.LOADING ? (
              <MenuItem
                sx={{
                  p: "8px 10px",
                }}
              >
                <CircularProgress size="15px" />
              </MenuItem>
            ) : (
              <MenuItem
                onClick={() => {
                  dispatch(logOut(toast));
                  handleCloseUserMenu();
                }}
                sx={{
                  p: "8px 10px",
                  fontSize: "13px",
                }}
              >
                Sign out
              </MenuItem>
            )}
          </Box>

          {/* footer menu items */}
          <FlexBox justifyContent="start" columnGap="10px" p="10px">
            {[
              { label: "Content policy", url: "policies/content-policy" },
              { label: "Terms", url: "/terms" },
              { label: "About", url: "/about" },
            ].map((node, idx) => (
              <Link key={idx} to={node.url} target="__blank">
                <Typography
                  sx={{
                    cursor: "pointer",
                    fontSize: "12px",
                    color: shades.primary[300],
                  }}
                >
                  {node.label}
                </Typography>
              </Link>
            ))}
          </FlexBox>
        </Menu>
      </Box>